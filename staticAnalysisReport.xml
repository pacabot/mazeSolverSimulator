<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
  <cppcheck version="1.61"/>
  <errors>
  <error id="passedByValue" severity="performance" msg="Function parameter 'maze' should be passed by reference." verbose="Parameter 'maze' is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++.">
    <location file="solverMaze.h" line="94"/>
  </error>
  <error id="passedByValue" severity="performance" msg="Function parameter 'maze' should be passed by reference." verbose="Parameter 'maze' is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++.">
    <location file="solverMaze.h" line="95"/>
  </error>
  <error id="comparisonOfBoolWithInt" severity="warning" msg="Comparison of a boolean with an integer." verbose="The expression 'true' is of type 'bool' and it is compared against an integer value.">
    <location file="solverMaze.cpp" line="80"/>
  </error>
  <error id="comparisonOfBoolWithInt" severity="warning" msg="Comparison of a boolean with an integer." verbose="The expression 'true' is of type 'bool' and it is compared against an integer value.">
    <location file="solverMaze.cpp" line="333"/>
  </error>
  <error id="comparisonOfBoolWithInt" severity="warning" msg="Comparison of a boolean with an integer." verbose="The expression 'true' is of type 'bool' and it is compared against an integer value.">
    <location file="solverMaze.cpp" line="341"/>
  </error>
  <error id="comparisonOfBoolWithInt" severity="warning" msg="Comparison of a boolean with an integer." verbose="The expression 'true' is of type 'bool' and it is compared against an integer value.">
    <location file="solverMaze.cpp" line="349"/>
  </error>
  <error id="comparisonOfBoolWithInt" severity="warning" msg="Comparison of a boolean with an integer." verbose="The expression 'true' is of type 'bool' and it is compared against an integer value.">
    <location file="solverMaze.cpp" line="357"/>
  </error>
  <error id="variableScope" severity="style" msg="The scope of the variable 'length' can be reduced." verbose="The scope of the variable 'length' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:&#xa;void f(int x)&#xa;{&#xa;    int i = 0;&#xa;    if (x) {&#xa;        // it's safe to move 'int i = 0;' here&#xa;        for (int n = 0; n &lt; 10; ++n) {&#xa;            // it is possible but not safe to move 'int i = 0;' here&#xa;            do_something(&amp;i);&#xa;        }&#xa;    }&#xa;}&#xa;When you see this message it is always safe to reduce the variable scope 1 level.">
    <location file="solverMaze.cpp" line="227"/>
  </error>
  <error id="passedByValue" severity="performance" msg="Function parameter 'maze' should be passed by reference." verbose="Parameter 'maze' is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++.">
    <location file="solverMaze.cpp" line="690"/>
  </error>
  <error id="passedByValue" severity="performance" msg="Function parameter 'maze' should be passed by reference." verbose="Parameter 'maze' is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++.">
    <location file="solverMaze.cpp" line="771"/>
  </error>
  <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires a signed integer given in the argument list." verbose="%d in format string (no. 1) requires a signed integer given in the argument list.">
    <location file="ssd1306.cpp" line="343"/>
  </error>
  <error id="incorrectLogicOperator" severity="warning" msg="Logical disjunction always evaluates to true: state &gt; 0 || state &lt;= 100." verbose="Logical disjunction always evaluates to true: state &gt; 0 || state &lt;= 100. Are these conditions necessary? Did you intend to use &amp;&amp; instead? Are the numbers correct? Are you comparing the correct variables?">
    <location file="ssd1306.cpp" line="698"/>
  </error>
  <error id="unusedFunction" severity="style" msg="The function 'floorSensorCalibrate' is never used." verbose="The function 'floorSensorCalibrate' is never used.">
    <location file="robotInterface.cpp" line="23"/>
  </error>
  <error id="unusedFunction" severity="style" msg="The function 'goOrientation' is never used." verbose="The function 'goOrientation' is never used.">
    <location file="robotInterface.cpp" line="10"/>
  </error>
  <error id="unusedFunction" severity="style" msg="The function 'moveZhonxArc' is never used." verbose="The function 'moveZhonxArc' is never used.">
    <location file="robotInterface.cpp" line="19"/>
  </error>
  <error id="unusedFunction" severity="style" msg="The function 'ssd1306ClearCircle' is never used." verbose="The function 'ssd1306ClearCircle' is never used.">
    <location file="ssd1306.cpp" line="521"/>
  </error>
  <error id="unusedFunction" severity="style" msg="The function 'ssd1306DrawBmp' is never used." verbose="The function 'ssd1306DrawBmp' is never used.">
    <location file="ssd1306.cpp" line="428"/>
  </error>
  <error id="unusedFunction" severity="style" msg="The function 'ssd1306DrawCircle' is never used." verbose="The function 'ssd1306DrawCircle' is never used.">
    <location file="ssd1306.cpp" line="446"/>
  </error>
  <error id="unusedFunction" severity="style" msg="The function 'ssd1306FillCircle' is never used." verbose="The function 'ssd1306FillCircle' is never used.">
    <location file="ssd1306.cpp" line="482"/>
  </error>
  <error id="unusedFunction" severity="style" msg="The function 'ssd1306Init' is never used." verbose="The function 'ssd1306Init' is never used.">
    <location file="ssd1306.cpp" line="183"/>
  </error>
  <error id="unusedFunction" severity="style" msg="The function 'ssd1306InvertArea' is never used." verbose="The function 'ssd1306InvertArea' is never used.">
    <location file="ssd1306.cpp" line="573"/>
  </error>
  <error id="unusedFunction" severity="style" msg="The function 'ssd1306PrintInt' is never used." verbose="The function 'ssd1306PrintInt' is never used.">
    <location file="ssd1306.cpp" line="333"/>
  </error>
  <error id="unusedFunction" severity="style" msg="The function 'ssd1306ProgressBar' is never used." verbose="The function 'ssd1306ProgressBar' is never used.">
    <location file="ssd1306.cpp" line="695"/>
  </error>
  <error id="unusedFunction" severity="style" msg="The function 'ssd1306ShiftFrameBuffer' is never used." verbose="The function 'ssd1306ShiftFrameBuffer' is never used.">
    <location file="ssd1306.cpp" line="396"/>
  </error>
  <error id="unusedFunction" severity="style" msg="The function 'waitValidation' is never used." verbose="The function 'waitValidation' is never used.">
    <location file="robotInterface.cpp" line="27"/>
  </error>
  <error id="missingInclude" severity="information" msg="Cppcheck cannot find all the include files (use --check-config for details)" verbose="Cppcheck cannot find all the include files. Cppcheck can check the code without the include files found. But the results will probably be more accurate if all the include files are found. Please check your project's include directories and add all of them as include directories for Cppcheck. To see what files Cppcheck cannot find use --check-config.">
  </error>
  </errors>
</results>
